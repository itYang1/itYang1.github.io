<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>svg学习总结</title>
      <link href="/posts/7f9c52dd.html"/>
      <url>/posts/7f9c52dd.html</url>
      
        <content type="html"><![CDATA[<h1 id="svg学习"><a href="#svg学习" class="headerlink" title="svg学习"></a>svg学习</h1><p>解决图标的最佳方案，平时我们添加图标的时候可能会对图标进行放大和缩小的处理，当图标被放大以后图标像素可能会失真，这样对用户视觉效果有一定的影响，那么怎么解决呢，于是就想到可以尝试用svg解决这个问题<br>Svg 是通过对图形进行绘制而形成的</p><h2 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h2><p>   <code>&lt;svg width=&#39;100&#39; height=&#39;100&#39;&gt;...&lt;/svg&gt;</code>创建一个100*100的画布```</p><h3 id="一·绘制种类"><a href="#一·绘制种类" class="headerlink" title="一·绘制种类"></a>一·绘制种类</h3><h4 id="绘制矩形-rect"><a href="#绘制矩形-rect" class="headerlink" title="绘制矩形-rect"></a>绘制矩形-rect</h4>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg  width=&quot;110&quot; height=&quot;110&quot;&gt;</span><br><span class="line">      &lt;rect width=&#x27;110&#x27; height=&#x27;110&#x27; fill=&#x27;yellow&#x27; stroke-width=&#x27;4&#x27; stroke=&#x27;blue&#x27;  /&gt;</span><br><span class="line">  &lt;/svg&gt; </span><br></pre></td></tr></table></figure><pre><code> 说明：   Width:宽度  Height：高度  fill：填充颜色  stroke-width：边框宽度  stroke：边框的颜色  fill-opacity:填充透明度  stroke-opacity：边框透明度  可以写成opacity：0-1之间任意数  Rx、ry：角度弧形的程度</code></pre><p>  效果图：<br>   <img src="/posts/7f9c52dd.htm/矩形.png" alt="矩形"></p><h4 id="绘制圆形-circle"><a href="#绘制圆形-circle" class="headerlink" title="绘制圆形-circle"></a>绘制圆形-circle</h4>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg width=&quot;200&quot; height=&quot;200&quot; fill=&#x27;blue&#x27;&gt;</span><br><span class="line">  &lt;circle cx=&#x27;50&#x27; cy=&#x27;50&#x27; r=&#x27;45&#x27; fill=&#x27;yellow&#x27; stroke-width=&#x27;4&#x27; stroke=&#x27;blue&#x27;/&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure><pre><code>说明:  cy、cy：圆形的x、y的坐标  R：圆形的半径效果图：</code></pre><p>   <img src="/posts/7f9c52dd.htm/圆形.png" alt="圆形"></p><h4 id="绘制椭圆-ellipse"><a href="#绘制椭圆-ellipse" class="headerlink" title="绘制椭圆-ellipse"></a>绘制椭圆-ellipse</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg width=&quot;500&quot; height=&quot;150&quot;&gt;</span><br><span class="line">    &lt;ellipse cx=&quot;120&quot; cy=&quot;80&quot; rx=&quot;100&quot; ry=&quot;50&quot; fill=&quot;none&quot; stroke=&quot;red&quot; stroke-width=&quot;3&quot;&gt;&lt;/ellipse&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure><p>  说明:<br>      cx、cy：椭圆的x、y的坐标<br>      rx、ry：水平、垂直半径<br>    效果图：<br>   <img src="/posts/7f9c52dd.htm/椭圆.png" alt="椭圆"></p><h4 id="绘制线条-line"><a href="#绘制线条-line" class="headerlink" title="绘制线条-line"></a>绘制线条-line</h4>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg width=&quot;200&quot; height=&quot;200&quot; &gt;</span><br><span class="line">  &lt;line x1=&#x27;10&#x27; y1=&#x27;10&#x27;  x2=&#x27;100&#x27; y2=&#x27;100&#x27;  stroke=&quot;blue&quot; stroke-width=&quot;3&quot;/&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure><p>  说明:<br>      x1、y1：起点坐标<br>      x2、y2：终点坐标<br>  效果图：<br>   <img src="/posts/7f9c52dd.htm/线条.png" alt="线条"></p><h4 id="绘制多线条-polyline"><a href="#绘制多线条-polyline" class="headerlink" title="绘制多线条-polyline"></a>绘制多线条-polyline</h4>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;polyline points=&quot;10,30 40,50 60,70&quot; fill=&quot;none&quot; stroke=&quot;blue&quot; stroke-width=&quot;3&quot; /&gt;</span><br></pre></td></tr></table></figure><p>  说明:<br>      points：三个点的坐标 以空格分开<br>  效果图：<br>   <img src="/posts/7f9c52dd.htm/多线条.png" alt="多线条"></p><h4 id="绘制多边形-polygon"><a href="#绘制多边形-polygon" class="headerlink" title="绘制多边形-polygon"></a>绘制多边形-polygon</h4>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;polygon points=&quot;10,30 100,35 50,120&quot; fill=&quot;pink&quot; /&gt;</span><br></pre></td></tr></table></figure><p>  说明:<br>      points：多个点的坐标 以空格分开<br>  效果图：<br>   <img src="/posts/7f9c52dd.htm/多边形.png" alt="多边形"></p><h4 id="绘制文本-text"><a href="#绘制文本-text" class="headerlink" title="绘制文本-text"></a>绘制文本-text</h4>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;text x=&#x27;20&#x27; y=&#x27;50&#x27; transform=&#x27;rotate(10,20,30)&#x27; font-size=&#x27;20&#x27; text-anchor=&#x27;start/middle/end&#x27;&gt; 11111111&lt;/text&gt;</span><br></pre></td></tr></table></figure><p>  说明:<br>      x、y:文本的起点位置<br>      transform：旋转角度(r x,y)r-旋转角度 x,y旋转中心点 x,y默认为0,0<br>      font-size:字体大小<br>      text-anchor：文本对其方式<br>      text增加跳转地址：用</p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg   width=&quot;200&quot; height=&quot;200&quot; xmlns:xlink=&#x27;http://www.w3.org/1999/xlink&#x27;&gt;</span><br><span class="line">    &lt;a xlink:href=&#x27;&#x27; target=&#x27;_blank&#x27;&gt;</span><br><span class="line">        &lt;text x=&#x27;20&#x27; y=&#x27;50&#x27; transform=&#x27;rotate(10,20,30)&#x27; font-size=&#x27;20&#x27; text-anchor=&#x27;start/middle/end&#x27;&gt; 跳转&lt;/text&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure></code></pre><h4 id="绘制路径-path"><a href="#绘制路径-path" class="headerlink" title="绘制路径-path"></a>绘制路径-path</h4>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg width=&quot;200&quot; height=&quot;200&quot;&gt;</span><br><span class="line">  &lt;path d=&#x27;M30 150 q70 -200 150 0&#x27;  fill=&quot;none&quot; stroke-width=&#x27;2&#x27; stroke=&#x27;orange&#x27; /&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure><p>  说明:<br>      d(draw):<br>      M(Moveto):M-决定定位 m-相对定位<br>      L(lineto):<br>      q：控制点(x,y) 终点(x,y)<br>      stroke-width：边框宽度<br>      stroke：边框的颜色<br>      stroke-linecap：笔画笔帽属性 -butt 灭有线帽 -round圆形线帽 square 方形<br>      stroke-dasharray：虚线笔画数性 至少两个数字<br>    当多个路径或者图形组合在一起。并且拥有相同颜色或者线条宽度时，为了减少多次在标签中设置相同的配置，可以将拥有相同配置的标签以<g>包裹住，在<g>标签上加入属性，如<g fill="red"><br>  效果图：<br>   <img src="/posts/7f9c52dd.htm/路径.png" alt="路径"></g></g></g></p><h4 id="模糊效果和阴影效果"><a href="#模糊效果和阴影效果" class="headerlink" title="模糊效果和阴影效果"></a>模糊效果和阴影效果</h4><p>  模糊效果:<br>    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  &lt;svg width=&quot;200&quot; height=&quot;200&quot;&gt;</span><br><span class="line">    &lt;defs&gt;</span><br><span class="line">        &lt;filter x=&quot;0&quot; y=&quot;0&quot; id=&#x27;f1&#x27;&gt;</span><br><span class="line">            &lt;feGaussianBlur stdDeviation=&#x27;20&#x27; /&gt;</span><br><span class="line">        &lt;/filter&gt;</span><br><span class="line">    &lt;/defs&gt;</span><br><span class="line">    &lt;rect width=&#x27;200&#x27; height=&#x27;200&#x27; fill=&#x27;pink&#x27; stroke=&#x27;green&#x27; stroke-width=&#x27;30&#x27; filter=&#x27;url(#f1)&#x27;&gt;&lt;/rect&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure><br>  效果图：<br>   <img src="/posts/7f9c52dd.htm/模糊.png" alt="模糊"></p><pre><code>阴影：  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">     &lt;svg width=&quot;300&quot; height=&quot;300&quot;&gt;</span><br><span class="line">    &lt;defs&gt;</span><br><span class="line">        &lt;filter x=&quot;0&quot; y=&quot;0&quot; width=&quot;100&quot; height=&quot;100&quot; id=&quot;f2&quot;&gt;</span><br><span class="line">            &lt;feOffset in=&quot;SourceAlpha&quot; dx=&quot;20&quot; dy=&quot;20&quot; /&gt;</span><br><span class="line">            &lt;feBlend in=&quot;SourceGraphic&quot; /&gt;</span><br><span class="line">        &lt;/filter&gt;</span><br><span class="line">    &lt;/defs&gt;</span><br><span class="line">    &lt;rect width=&#x27;200&#x27; height=&#x27;200&#x27; fill=&#x27;green&#x27; stroke=&#x27;yellow&#x27; stroke-width=&#x27;4&#x27; filter=&quot;url(#f2)&quot;&gt;&lt;/rect&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure></code></pre><p>注意：filter=”url(#f2)”要与id=”f2”内容是一样的<br>  效果图：<br>   <img src="/posts/7f9c52dd.htm/阴影.png" alt="阴影"></p><h4 id="线性渐变-linearGradient"><a href="#线性渐变-linearGradient" class="headerlink" title="线性渐变-linearGradient"></a>线性渐变-linearGradient</h4><pre><code>&lt;svg width=&quot;200&quot; height=&quot;200&quot;&gt;    &lt;defs&gt;        &lt;linearGradient x1=&quot;0%&quot; y1=&quot;0%&quot; x2=&quot;100%&quot; y2=&quot;0%&quot; id=&quot;f6&quot;&gt;            &lt;stop offset=&quot;0%&quot; stop-color=&quot;yellow&quot; /&gt;            &lt;stop offset=&quot;100%&quot; stop-color=&quot;pink&quot; /&gt;        &lt;/linearGradient&gt;    &lt;/defs&gt;    &lt;rect width=&#39;200&#39; height=&#39;200&#39; fill=&quot;url(#f6)&quot; /&gt;&lt;/svg&gt;</code></pre><p>说明:<br>  offset:开始和结束位置的属性值<br>  stop-color：渐变的颜色<br>   需要注意的是id要与下面的url里面的内容一致<br>  效果图：<br>   <img src="/posts/7f9c52dd.htm/线性渐变.png" alt="线性渐变"></p><h4 id="径向渐变-radialGradient"><a href="#径向渐变-radialGradient" class="headerlink" title="径向渐变-radialGradient"></a>径向渐变-radialGradient</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg width=&quot;400&quot; height=&quot;400&quot;&gt;</span><br><span class="line">    &lt;defs&gt;</span><br><span class="line">        &lt;radialGradient id=&quot;f4&quot; cx=&quot;50%&quot; cy=&quot;50%&quot; r=&quot;50%&quot; fx=&quot;50%&quot; fy=&quot;50%&quot;&gt;</span><br><span class="line">            &lt;stop offset=&quot;0%&quot; stop-color=&quot;yellow&quot; /&gt;</span><br><span class="line">            &lt;stop offset=&quot;100%&quot; stop-color=&quot;pink&quot; /&gt;</span><br><span class="line">        &lt;/radialGradient&gt;</span><br><span class="line">    &lt;/defs&gt;</span><br><span class="line">    &lt;rect width=&#x27;200&#x27; height=&#x27;200&#x27; cx=&quot;200&quot; cy=&quot;30&quot; r=&quot;50&quot; fx=&quot;40&quot; fy=&quot;50&quot; fill=&quot;url(#f4)&quot;&gt;&lt;/rect&gt;</span><br><span class="line">&lt;/svg&gt;</span><br></pre></td></tr></table></figure><p>说明:<br> offset:开始和结束位置的属性值<br> stop-color：渐变的颜色<br> cx,cy,r:外面的圆和半径<br> fx,fy:内部的为止<br> 效果图：<br> <img src="/posts/7f9c52dd.htm/线性渐变.png" alt="线性渐变"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>myFirstArticle</title>
      <link href="/posts/6059972f.html"/>
      <url>/posts/6059972f.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>这是我首次发布的博客-如何通过HEXO+github 创建属于自己的博客</title>
      <link href="/posts/acc0d7b7.html"/>
      <url>/posts/acc0d7b7.html</url>
      
        <content type="html"><![CDATA[<p>作为一个it打工人，怎么没有一个属于自己的的博客呢，于是我在网上各种搜索，查询各种教程，最后终于创建了一个自己的博客，创建完成之后，就迫不及待地创建了我的第一篇博客文章—-“如何通过HEXO+github 创建属于自己的博客”<br>我用到的依赖包：<br>    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;hexo-deployer-git&quot;: &quot;^4.0.0&quot;,</span><br><span class="line"> nvm(&quot;node&quot;:&quot;16.14.1&quot;,npm)</span><br></pre></td></tr></table></figure></p><p>由于我有git账号，注册账号的过程忽略，这里就不说了。</p><h2 id="一、安装hexo"><a href="#一、安装hexo" class="headerlink" title="一、安装hexo"></a>一、安装hexo</h2><p><span style="font-size:16px"><strong>1、</strong></span> 在自己经常存代码的文件夹中，在顶部搜索栏中输入cmd，打开终端,如图：<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_14-14-16.png" alt="打开终端"></p><p><span style="font-size:16px"><strong>2、</strong></span> 安装hexo，如图<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_14-35-39.png" alt="安装hexo"></p><p>可以全局安装<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>也可以局部安装<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure></p><p><span style="font-size:16px"><strong>3、</strong></span> 运行hexo init xxx(项目名称)，如图<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_14-41-46.png" alt="创建hexo项目名称"><br>进入创建的文件夹，按照步骤1进入cmd中，输入<code>npm install</code><br>然后输入<code>hexo s</code><br> 此时一个简单的hexo就完成啦！如图：<br> <img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_14-47-57.png" alt="hello hexo"></p><h2 id="二、更换主题"><a href="#二、更换主题" class="headerlink" title="二、更换主题"></a>二、更换主题</h2><p><span style="font-size:16px"><strong>1、</strong></span> 打开<a href="https://hexo.io/zh-cn/docs/">hexo官方文档</a><br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_14-53-11.png" alt="主题选择"><br>选择一个自己喜欢的主题，将git地址克隆下来<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_14-54-59.png" alt="主题选择"><br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_14-55-43.png" alt="git下载"><br>打开根目录下的themes，将git地址下载到themes内，<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_14-55-43.png" alt="git下载1"><br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_15-00-23.png" alt="git下载1"><br>此时下载下来的文件名字可能是hexo-theme-xxxx,为了方便调用，将文件夹名字改为xxxx,然后打开根目录下的_config.yml文件，将theme后面的名称修改为刚刚文件夹的名字,如图<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_15-46-15.png" alt="主题更换"><br><span style="font-size:16px"><strong>2、</strong></span> 打开终端Ctrl+c退出项目运行，输入<code>hexo clean</code>,此命令是清理缓存(删除db.json),然后在输入<code>hexo generate或者hexo g</code>此命令是生成静态文件，最后输入<code>hexo server或者hexo s</code> 启动服务器,默认的端口为4000，如果出现端口被占用，如图所示，<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_16-22-21.png" alt="端口占用报错"><br>那么可以输入```hexp s -p 5555(端口号，可以随意拜变换)````,打开对应的地址，查看界面是否有变化</p><p><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_16-24-00.png" alt="成功！"><br>哇哈哈哈<del>~</del>~成功啦</p><h2 id="三、关联git"><a href="#三、关联git" class="headerlink" title="三、关联git"></a>三、关联git</h2><p>说明：安装好git后，要配置SSH，并且要与git创建联系<br><!-- ```js $ git config --global user.name "git用户名"$ git config --global user.email "邮箱地址"``` --></p><p><span style="font-size:16px"><strong>1、</strong></span> 登录git，创建新项目，如图<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_16-31-16.png" alt="创建项目"><br>这里一定要<span style="color: #ff0000;font-size:30px">注意</span>创建的项目名字一定要以xxx.github.io这种格式命名，并且xxx要与owner的名字一样，不然最后界面显示不出来，项目名字创建完成后，进入如图页面<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_16-48-55.png" alt="创建项目">复制git地址，打开项目更目录下的_config.yml文件 滚动到最底下，写入类似这种，如图：<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_16-54-58.png" alt="创建项目"><br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_16-56-13.png" alt="创建项目"><br><span style="font-size:16px"><strong>2、</strong></span> 打开终端Ctrl+c退出项目运行，输入<code>hexo clean</code>,此命令是清理缓存(删除db.json),然后在输入<code>hexo generate或者hexo g</code>此命令是生成静态文件，最后输入<code>hexo server或者hexo s</code> 启动服务器。</p><p>最后的效果<br><img src="/posts/acc0d7b7.htm/PixPin_2024-03-29_17-20-04.png" alt="创建项目"></p>]]></content>
      
      
      
        <tags>
            
            <tag> IT </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
